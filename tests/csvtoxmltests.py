import unittest
from lxml import etree
from lxml.etree import XSLTParseError
from constants import *
from csvtometadata.utils.csvtoxml import *
from csvtometadata import *
from csvtometadata.utils.readcsv import *

class CsvToXmlTests(unittest.TestCase):
    def setUp(self):
        self.example_reader = csv_to_dict_reader(ADJUSTED_EXAMPLE_FILE_PATH)
        self.example_row = list(self.example_reader)[0]
        self.valid_reader = csv_to_dict_reader(VALID_FILE_PATH)
        self.valid_row = list(self.valid_reader)[0]
        self.simple_xslt_path = SIMPLE_TRANSFORMER_FILE_PATH
        self.simple_xslt_input = SIMPLE_TRANSFORM_INPUT_FILE_PATH
        
    def test_create_intermediate_xml(self):
        self.assertEqual(etree.tostring(create_intermediate_xml(self.valid_row)), '<record><surface_elevation>869.000000</surface_elevation><metadata_contact_city></metadata_contact_city><resource_access_instruction>Access the imaginary resource through dreams.</resource_access_instruction><metadata_contact_fax></metadata_contact_fax><resource_languages>eng</resource_languages><resource_id>http://resource.usgin.org/uri-gin/dlio/OFR-2001-09</resource_id><metadata_contact_org_name>Arizona Geological Survey</metadata_contact_org_name><metadata_contact_street_address></metadata_contact_street_address><north_bounding_latitude>75.000000</north_bounding_latitude><distributor_contact_city>Tucson</distributor_contact_city><originator_contact_phone>(520) 770-3500</originator_contact_phone><distributor_contact_person_name></distributor_contact_person_name><originator_contact_city>Tucson</originator_contact_city><metadata_language>eng</metadata_language><publication_date>2010-01-01T00:00</publication_date><keywords_spatial>North America</keywords_spatial><keywords_spatial>Arizona</keywords_spatial><metadata_date>2010-08-19T12:00</metadata_date><south_bounding_latitude>17.000000</south_bounding_latitude><distributor_contact_zip>85701</distributor_contact_zip><metadata_uuid>165d8100-abd3-11df-94e2-0800200c9a66</metadata_uuid><title>Metadata Record Showcase</title><metadata_contact_state></metadata_contact_state><originator_contact_person_name>Geologist, A.</originator_contact_person_name><originator_contact_person_name>Igneous, Rocky</originator_contact_person_name><metadata_contact_phone></metadata_contact_phone><originator_contact_org_name>Arizona Geological Survey</originator_contact_org_name><distributor_contact_street_address>416 W. Congress St., Suite 100</distributor_contact_street_address><originator_contact_url>http://www.azgs.az.gov/contact.shtml</originator_contact_url><datum_elevation>0</datum_elevation><distributor_contact_email>metadata@usgin.org</distributor_contact_email><interval_depth_top>0</interval_depth_top><interval_depth_bottom>7825</interval_depth_bottom><keywords_thematic>test</keywords_thematic><keywords_thematic>dummy</keywords_thematic><bibliographic_citation>Grunberg, Wolfgang, Stephen Richard and Jordan Hastings. Metadata Record Showcase. 0 pp. Tucson, 2010.</bibliographic_citation><distributor_contact_phone></distributor_contact_phone><distributor_contact_fax></distributor_contact_fax><metadata_contact_zip></metadata_contact_zip><metadata_contact_person_name></metadata_contact_person_name><description>This is a test metadata record.</description><resource_lineage_statement></resource_lineage_statement><distributor_contact_org_name></distributor_contact_org_name><metadata_contact_email>metadata@azgs.az.gov</metadata_contact_email><distributor_contact_url>http://lab.usgin.org</distributor_contact_url><metadata_contact_position_name></metadata_contact_position_name><distributor_contact_position_name></distributor_contact_position_name><keywords_temporal>Cenozoic</keywords_temporal><keywords_temporal>Phanerozoic</keywords_temporal><originator_contact_state>AZ</originator_contact_state><west_bounding_longitude>-64.000000</west_bounding_longitude><distributor_contact_state>AZ</distributor_contact_state><temporal_start_date></temporal_start_date><resource_quality_statement>This resource has not been validated.</resource_quality_statement><resource_constraints_statement>Creative Commons License: Attribution + ShareAlike (cc-by-sa)</resource_constraints_statement><originator_contact_fax>(520) 770-3505</originator_contact_fax><originator_contact_email></originator_contact_email><metadata_contact_url></metadata_contact_url><elevation_units>ft</elevation_units><originator_contact_street_address>416 W. Congress St., Suite 100</originator_contact_street_address><related_resource></related_resource><temporal_end_date></temporal_end_date><originator_contact_position_name></originator_contact_position_name><east_bounding_longitude>-180.000000</east_bounding_longitude><originator_contact_zip>85701</originator_contact_zip><resource_url></resource_url><resource_type>Document: Text</resource_type></record>')
        self.assertEqual(etree.tostring(create_intermediate_xml(self.valid_row, 5)), '<record rowId="5"><surface_elevation>869.000000</surface_elevation><metadata_contact_city></metadata_contact_city><resource_access_instruction>Access the imaginary resource through dreams.</resource_access_instruction><metadata_contact_fax></metadata_contact_fax><resource_languages>eng</resource_languages><resource_id>http://resource.usgin.org/uri-gin/dlio/OFR-2001-09</resource_id><metadata_contact_org_name>Arizona Geological Survey</metadata_contact_org_name><metadata_contact_street_address></metadata_contact_street_address><north_bounding_latitude>75.000000</north_bounding_latitude><distributor_contact_city>Tucson</distributor_contact_city><originator_contact_phone>(520) 770-3500</originator_contact_phone><distributor_contact_person_name></distributor_contact_person_name><originator_contact_city>Tucson</originator_contact_city><metadata_language>eng</metadata_language><publication_date>2010-01-01T00:00</publication_date><keywords_spatial>North America</keywords_spatial><keywords_spatial>Arizona</keywords_spatial><metadata_date>2010-08-19T12:00</metadata_date><south_bounding_latitude>17.000000</south_bounding_latitude><distributor_contact_zip>85701</distributor_contact_zip><metadata_uuid>165d8100-abd3-11df-94e2-0800200c9a66</metadata_uuid><title>Metadata Record Showcase</title><metadata_contact_state></metadata_contact_state><originator_contact_person_name>Geologist, A.</originator_contact_person_name><originator_contact_person_name>Igneous, Rocky</originator_contact_person_name><metadata_contact_phone></metadata_contact_phone><originator_contact_org_name>Arizona Geological Survey</originator_contact_org_name><distributor_contact_street_address>416 W. Congress St., Suite 100</distributor_contact_street_address><originator_contact_url>http://www.azgs.az.gov/contact.shtml</originator_contact_url><datum_elevation>0</datum_elevation><distributor_contact_email>metadata@usgin.org</distributor_contact_email><interval_depth_top>0</interval_depth_top><interval_depth_bottom>7825</interval_depth_bottom><keywords_thematic>test</keywords_thematic><keywords_thematic>dummy</keywords_thematic><bibliographic_citation>Grunberg, Wolfgang, Stephen Richard and Jordan Hastings. Metadata Record Showcase. 0 pp. Tucson, 2010.</bibliographic_citation><distributor_contact_phone></distributor_contact_phone><distributor_contact_fax></distributor_contact_fax><metadata_contact_zip></metadata_contact_zip><metadata_contact_person_name></metadata_contact_person_name><description>This is a test metadata record.</description><resource_lineage_statement></resource_lineage_statement><distributor_contact_org_name></distributor_contact_org_name><metadata_contact_email>metadata@azgs.az.gov</metadata_contact_email><distributor_contact_url>http://lab.usgin.org</distributor_contact_url><metadata_contact_position_name></metadata_contact_position_name><distributor_contact_position_name></distributor_contact_position_name><keywords_temporal>Cenozoic</keywords_temporal><keywords_temporal>Phanerozoic</keywords_temporal><originator_contact_state>AZ</originator_contact_state><west_bounding_longitude>-64.000000</west_bounding_longitude><distributor_contact_state>AZ</distributor_contact_state><temporal_start_date></temporal_start_date><resource_quality_statement>This resource has not been validated.</resource_quality_statement><resource_constraints_statement>Creative Commons License: Attribution + ShareAlike (cc-by-sa)</resource_constraints_statement><originator_contact_fax>(520) 770-3505</originator_contact_fax><originator_contact_email></originator_contact_email><metadata_contact_url></metadata_contact_url><elevation_units>ft</elevation_units><originator_contact_street_address>416 W. Congress St., Suite 100</originator_contact_street_address><related_resource></related_resource><temporal_end_date></temporal_end_date><originator_contact_position_name></originator_contact_position_name><east_bounding_longitude>-180.000000</east_bounding_longitude><originator_contact_zip>85701</originator_contact_zip><resource_url></resource_url><resource_type>Document: Text</resource_type></record>')
        
    def test_build_transform(self):
        self.assertTrue(isinstance(build_transform(self.simple_xslt_path), etree.XSLT))
        # Bad file path
        self.assertRaises(IOError, build_transform, xslt_path='/nothing/here/')
        # Not a valid XSLT
        self.assertRaises(XSLTParseError, build_transform, xslt_path=self.simple_xslt_input)
        
    def test_perform_transform(self):
        simple_result = perform_transform(etree.parse(open(self.simple_xslt_input)), build_transform(self.simple_xslt_path))
        self.assertEqual(etree.tostring(simple_result), '<foo>Hibbity</foo>')
        # Bad input to be transformed
        self.assertRaises(TypeError, perform_transform, intermediate='what if I give you crap input', transform=build_transform(self.simple_xslt_path))
        # Bad input transformer
        self.assertRaises(TypeError, perform_transform, intermediate=etree.parse(open(self.simple_xslt_input)), transform='what if I give you crap input')
    
    #def test_example_run(self):
    #    result, report, output = validatecsv(VALID_FILE_PATH)
    #    int = create_intermediate_xml(output[0])
    #    trans = build_transform(CURRENT_XSLT_PATH)
    #    result = perform_transform(int, trans)
    #    print result
    
    def test_transform_valid_csv(self):
        validation_output = list(csv_to_dict_reader(VALID_FILE_PATH))
        print transform_valid_csv(validation_output, CURRENT_XSLT_PATH)
        # Once the XSLT is working, this should assert equal against a valid output file for this input file.
        #self.assertEqual(transform_valid_csv(validation_output, CURRENT_XSLT_PATH), valid_output_file)